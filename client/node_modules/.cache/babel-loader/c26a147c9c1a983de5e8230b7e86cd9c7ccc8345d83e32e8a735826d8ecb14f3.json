{"ast":null,"code":"const initialState = {\n  pokemonsGlobal: [],\n  types: [],\n  filteredPokemons: [],\n  orderedPokemons: [],\n  selectedPokemon: null\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"GET_ALL_POKEMONS\":\n      return {\n        ...state,\n        pokemonsGlobal: action.payload\n      };\n    case \"GET_ALL_TYPES\":\n      return {\n        ...state,\n        types: action.payload\n      };\n    case \"GET_POKEMON_BY_ID\":\n      console.log(action.payload);\n      return {\n        ...state,\n        selectedPokemon: action.payload\n      };\n    case \"GET_POKEMON_BY_NAME\":\n      return {\n        ...state,\n        filteredPokemons: action.payload\n      };\n    case \"FILTER_ALL\":\n      let allPokemons = typeof state.orderedPokemons !== \"string\" && state.orderedPokemons.length ? [...state.orderedPokemons] : [...state.pokemonsGlobal];\n      let filteredByType = allPokemons.filter(pokemon => pokemon.types.includes(action.payload.type));\n      if (typeof state.orderedPokemons === \"string\") {\n        allPokemons = [...state.pokemonsGlobal];\n      }\n      if (action.payload.type === \"all\") {\n        filteredByType = [...allPokemons];\n      }\n      if (filteredByType === \"error\") {\n        return {\n          ...state,\n          filteredPokemons: \"error\"\n        };\n      }\n      let filteredBySource = [];\n      if (action.payload.source === \"dbPokemons\") {\n        filteredBySource = filteredByType.filter(pokemon => isNaN(Number(pokemon.id)));\n      } else if (action.payload.source === \"apiPokemons\") {\n        filteredBySource = filteredByType.filter(pokemon => !isNaN(Number(pokemon.id)));\n      } else {\n        filteredBySource = [...filteredByType];\n      }\n      if (filteredBySource.length === 0) {\n        return {\n          ...state,\n          filteredPokemons: \"error\"\n        };\n      } else {\n        return {\n          ...state,\n          filteredPokemons: filteredBySource\n        };\n      }\n    case \"ORDER_BY_NAME\":\n      let allPokemonsNames = [...state.pokemonsGlobal];\n      if (typeof state.filteredPokemons === \"string\") {\n        return {\n          ...state,\n          orderedPokemons: \"error\"\n        };\n      } else typeof state.filteredPokemons !== \"string\" && state.filteredPokemons.length ? allPokemonsNames = [...state.filteredPokemons] : allPokemonsNames = [...state.pokemonsGlobal];\n      if (action.payload === \"aToZ\") {\n        let orderPokemonsNames = allPokemonsNames.sort((a, b) => {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) {\n            return -1;\n          }\n          if (a.name.toLowerCase() > b.name.toLowerCase()) {\n            return 1;\n          }\n          return 0;\n        });\n        return {\n          ...state,\n          orderedPokemons: orderPokemonsNames\n        };\n      }\n      if (action.payload === \"zToA\") {\n        let orderPokemonsNames = allPokemonsNames.sort((a, b) => {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) {\n            return 1;\n          }\n          if (a.name.toLowerCase() > b.name.toLowerCase()) {\n            return -1;\n          }\n          return 0;\n        });\n        return {\n          ...state,\n          orderedPokemons: orderPokemonsNames\n        };\n      }\n      break;\n    case \"ORDER_BY_ATTACK\":\n      let allPokemonsAttack = [...state.pokemonsGlobal];\n      if (typeof state.filteredPokemons === \"string\") {\n        return {\n          ...state,\n          orderedPokemons: \"error\"\n        };\n      } else typeof state.filteredPokemons !== \"string\" && state.filteredPokemons.length ? allPokemonsAttack = [...state.filteredPokemons] : allPokemonsAttack = [...state.pokemonsGlobal];\n      if (action.payload === \"ascending\") {\n        let orderPokemonsAttack = allPokemonsAttack.sort((a, b) => {\n          if (a.attack < b.attack) {\n            return -1;\n          }\n          if (a.attack > b.attack) {\n            return 1;\n          }\n          return 0;\n        });\n        return {\n          ...state,\n          orderedPokemons: orderPokemonsAttack\n        };\n      }\n      if (action.payload === \"descending\") {\n        let orderPokemonsAttack = allPokemonsAttack.sort((a, b) => {\n          if (a.attack < b.attack) {\n            return 1;\n          }\n          if (a.attack > b.attack) {\n            return -1;\n          }\n          return 0;\n        });\n        return {\n          ...state,\n          orderedPokemons: orderPokemonsAttack\n        };\n      }\n      break;\n    case \"CLEAR_DETAIL\":\n      return {\n        ...state,\n        selectedPokemon: null\n      };\n    case \"CLEAR_ORDER\":\n      return {\n        ...state,\n        orderedPokemons: [...state.pokemonsGlobal]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","pokemonsGlobal","types","filteredPokemons","orderedPokemons","selectedPokemon","reducer","state","arguments","length","undefined","action","type","payload","console","log","allPokemons","filteredByType","filter","pokemon","includes","filteredBySource","source","isNaN","Number","id","allPokemonsNames","orderPokemonsNames","sort","a","b","name","toLowerCase","allPokemonsAttack","orderPokemonsAttack","attack"],"sources":["C:/PI/pi-pokemon/client/src/Redux/reducer.js"],"sourcesContent":["const initialState = {\r\n    pokemonsGlobal: [],\r\n    types: [],\r\n    filteredPokemons: [],\r\n    orderedPokemons: [],\r\n    selectedPokemon: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case \"GET_ALL_POKEMONS\":\r\n            return {...state, pokemonsGlobal: action.payload};\r\n\r\n        case \"GET_ALL_TYPES\":\r\n            return {...state, types: action.payload};\r\n\r\n        case \"GET_POKEMON_BY_ID\":\r\n          console.log(action.payload)\r\n            return {...state, selectedPokemon: action.payload};\r\n\r\n        case \"GET_POKEMON_BY_NAME\":\r\n            return {...state, filteredPokemons: action.payload};\r\n\r\n            case \"FILTER_ALL\":\r\n              let allPokemons = typeof state.orderedPokemons !== \"string\" && state.orderedPokemons.length ? [...state.orderedPokemons] : [...state.pokemonsGlobal]\r\n              let filteredByType = allPokemons.filter(pokemon => pokemon.types.includes(action.payload.type))\r\n\r\n              if(typeof state.orderedPokemons === \"string\"){\r\n                allPokemons = [...state.pokemonsGlobal]\r\n              }\r\n  \r\n              if(action.payload.type === \"all\"){\r\n                filteredByType = [...allPokemons]\r\n              }\r\n  \r\n              if(filteredByType === \"error\"){\r\n                return {...state, filteredPokemons: \"error\"}\r\n              }\r\n  \r\n              let filteredBySource = []\r\n              if(action.payload.source === \"dbPokemons\"){\r\n                filteredBySource = filteredByType.filter(pokemon => isNaN(Number(pokemon.id)))\r\n              }else if(action.payload.source === \"apiPokemons\"){\r\n                filteredBySource = filteredByType.filter(pokemon => !isNaN(Number(pokemon.id)))\r\n              }else{\r\n                filteredBySource = [...filteredByType]\r\n              }\r\n  \r\n              if(filteredBySource.length === 0){\r\n                return {...state, filteredPokemons: \"error\"}\r\n              }else{\r\n                return {...state, filteredPokemons: filteredBySource}\r\n              }\r\n\r\n          case \"ORDER_BY_NAME\":\r\n            let allPokemonsNames = [...state.pokemonsGlobal];\r\n            if(typeof state.filteredPokemons === \"string\"){\r\n              return {...state, orderedPokemons: \"error\"}\r\n            }\r\n\r\n           else typeof state.filteredPokemons !== \"string\" && state.filteredPokemons.length ? allPokemonsNames = [...state.filteredPokemons] : allPokemonsNames = [...state.pokemonsGlobal]\r\n\r\n            if(action.payload === \"aToZ\"){\r\n             let orderPokemonsNames = allPokemonsNames.sort((a, b) => {\r\n                if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                  return -1;\r\n                }\r\n                if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              })\r\n              return {...state, orderedPokemons: orderPokemonsNames}\r\n            }\r\n\r\n            if(action.payload === \"zToA\"){\r\n              let orderPokemonsNames = allPokemonsNames.sort((a, b) => {\r\n                 if (a.name.toLowerCase() < b.name.toLowerCase()) {\r\n                   return 1;\r\n                 }\r\n                 if (a.name.toLowerCase() > b.name.toLowerCase()) {\r\n                   return -1;\r\n                 }\r\n                 return 0;\r\n               })\r\n               return {...state, orderedPokemons: orderPokemonsNames}\r\n             }\r\n             break;\r\n\r\n            case \"ORDER_BY_ATTACK\":\r\n              let allPokemonsAttack = [...state.pokemonsGlobal];\r\n\r\n              if(typeof state.filteredPokemons === \"string\"){\r\n                return {...state, orderedPokemons: \"error\"}\r\n              }\r\n              else typeof state.filteredPokemons !== \"string\" && state.filteredPokemons.length ? allPokemonsAttack = [...state.filteredPokemons] : allPokemonsAttack = [...state.pokemonsGlobal]\r\n\r\n            if(action.payload === \"ascending\"){\r\n             let orderPokemonsAttack = allPokemonsAttack.sort((a, b) => {\r\n                if (a.attack < b.attack) {\r\n                  return -1;\r\n                }\r\n                if (a.attack > b.attack) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              })\r\n              return {...state, orderedPokemons: orderPokemonsAttack}\r\n            }\r\n\r\n            if(action.payload === \"descending\"){\r\n              let orderPokemonsAttack = allPokemonsAttack.sort((a, b) => {\r\n                 if (a.attack < b.attack) {\r\n                   return 1;\r\n                 }\r\n                 if (a.attack > b.attack) {\r\n                   return -1;\r\n                 }\r\n                 return 0;\r\n               })\r\n               return {...state, orderedPokemons: orderPokemonsAttack}\r\n             }\r\n             break;\r\n             \r\n            case \"CLEAR_DETAIL\":\r\n              return {...state, selectedPokemon: null}\r\n\r\n            case \"CLEAR_ORDER\":\r\n              return {...state, orderedPokemons: [...state.pokemonsGlobal]}\r\n\r\n        default: return {...state};\r\n    }\r\n}\r\n\r\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}